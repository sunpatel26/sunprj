@using Business.SQL
@using GridCore
@addTagHelper *, GridMvc

@model ISGrid
@{
    ViewData["Title"] = "Master Entity";
    Layout = "~/Views/Shared/_LayoutMaster.cshtml";

}
<div class="page-breadcrumb d-none d-sm-flex align-items-center pb-3 border-bottom">
    <div class="ps-3 col-md-6">
        <nav aria-label="breadcrumb">
            <ol class="breadcrumb mb-0 p-0">
                <li class="breadcrumb-item">
                    <a asp-controller="Home" asp-action="Index" asp-area="Admin"><i class="bx bx-home-alt"></i></a>
                </li>
                @if (Model.CommonSettings != null)
                {
                    <li class="breadcrumb-item active" aria-current="page"><a asp-controller="MasterEntity" asp-action="Index" asp-area="Admin">Master Entity</a></li>

                    <li class="breadcrumb-item active" aria-current="page">@Model.CommonSettings.QueryString</li>
                }
                else
                {
                    <li class="breadcrumb-item active" aria-current="page">Master Entity</li>
                }
            </ol>
        </nav>
    </div>
    
    <div class="col-md-6 text-align-right">
        @if (Model.CommonSettings != null)
        {
            <a class="btn btn-primary px-5" onclick="fnMasterEntity(this)"
           href="javascript:void(0)"
           data-key="@Model.CommonSettings.QueryString"
           data-bs-toggle="offcanvas"
           data-bs-target="#canvas_masterentity"
           aria-controls="canvas_masterentity">
                Add Master Entry
            </a>
        }
        else
        {
            <a class="btn btn-primary px-5" onclick="fnMasterEntity(this)"
           href="javascript:void(0)"
           data-key="0"
           data-bs-toggle="offcanvas"
           data-bs-target="#canvas_masterentity"
           aria-controls="canvas_masterentity">
                Add Master Entry
            </a>
        }
    </div>
</div>
<div class="row pt-1">
    <div class="col-md-12">
        <grid model="@Model" />
    </div>
</div>

<div class="offcanvas offcanvas-end" tabindex="-1" id="canvas_masterentity">
    <div class="offcanvas-header">
        <h5 class="offcanvas-title">Add Master Entry</h5>
        <button type="button" class="btn-close te  xt-reset" data-bs-dismiss="offcanvas" aria-l abel="Close"></button>
    </div>
    <div class="offcanvas-body pt-3 pb-5">
        <div id="dvInfo">
        </div>
    </div>
</div>



<div class="offcanvas offcanvas-end" tabindex="-1" id="canvas_master">
    <div class="offcanvas-header">
        <h5 class="offcanvas-title">Add Master Key</h5>
        <button type="button" class="btn-close te  xt-reset" data-bs-dismiss="offcanvas" aria-l abel="Close"></button>
    </div>
    <div class="offcanvas-body pt-3 pb-5">
        <div id="dvInfoKey">
        </div>
    </div>
</div>
<script type="text/javascript">
    var urladd = '@Url.Action("Get", "MasterEntity")';
    var urldeletebyid = '@Url.Action("DeleteMasterList", "MasterEntity")';
    var urldeletebykey = '@Url.Action("DeleteMasterListByName", "MasterEntity")';


    function fnMasterEntity(obj) {
        var _key = $(obj).data('key');
        var _id = $(obj).data('id');
        var _parameters = { id: _id, key: _key };
        $.ajax({
            url: urladd,
            type: "POST",
            data: _parameters,
            success: function(data, textStatus, jqXHR) {
                $('#dvInfo').html(data);
                $("#canvas_masterentity").show();//('hide');
            }
        });
    }



    function fnDeleteMasterEntity(obj) {
        var _key = $(obj).data('key');
        var _id = $(obj).data('id');
        var _parameters = { id: _id };
        $.ajax({
            url: urldeletebyid,
            type: "POST",
            data: _parameters,
            success: function(data, textStatus, jqXHR) {

                if (data.status) {
                    //notification
                    Lobibox.notify('success', {
                        pauseDelayOnHover: true,
                        size: 'mini',
                        icon: 'bx bx-check-circle',
                        continueDelayOnInactiveTab: false,
                        position: 'bottom right',
                        msg: data.message
                    });
                    window.location.reload().delay(3000);
                }
                else {
                    Lobibox.notify('error', {
                        pauseDelayOnHover: true,
                        size: 'mini',
                        icon: 'bx bx-check-circle',
                        continueDelayOnInactiveTab: false,
                        position: 'bottom right',
                        msg: data.message
                    });
                }
            }
            , error: function(error) {
                laddaStop(l);
                Lobibox.notify('error', {
                    pauseDelayOnHover: true,
                    size: 'mini',
                    icon: 'bx bx-check-circle',
                    continueDelayOnInactiveTab: false,
                    position: 'bottom right',
                    msg: "@MessageHelper.Error"
                });
            }
        });
    }

    function fnDeleteMasterEntityByKey(obj) {
        var _key = $(obj).data('key');
        var _id = $(obj).data('id');
        var _parameters = { name: _key };
        $.ajax({
            url: urldeletebykey,
            type: "POST",
            data: _parameters,
            success: function(data, textStatus, jqXHR) {
                if (data.status) {
                    //notification
                    Lobibox.notify('success', {
                        pauseDelayOnHover: true,
                        size: 'mini',
                        icon: 'bx bx-check-circle',
                        continueDelayOnInactiveTab: false,
                        position: 'bottom right',
                        msg: data.message
                    });
                    window.location.reload().delay(3000);
                }
                else {
                    Lobibox.notify('error', {
                        pauseDelayOnHover: true,
                        size: 'mini',
                        icon: 'bx bx-check-circle',
                        continueDelayOnInactiveTab: false,
                        position: 'bottom right',
                        msg: data.message
                    });
                }
            }
            , error: function(error) {
                laddaStop(l);
                Lobibox.notify('error', {
                    pauseDelayOnHover: true,
                    size: 'mini',
                    icon: 'bx bx-check-circle',
                    continueDelayOnInactiveTab: false,
                    position: 'bottom right',
                    msg: "@MessageHelper.Error"
                });
            }
        });
    }

</script>